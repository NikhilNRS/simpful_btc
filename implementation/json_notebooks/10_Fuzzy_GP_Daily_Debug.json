{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "d907aa19-dee0-4e95-adce-8fef3e985add",
      "metadata": {},
      "source": [
        "## Imports"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "id": "b0f79890-32ce-4f68-bc58-088d94b98087",
      "metadata": {
        "scrolled": true
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/Users/nikhilrazab-sekh/Desktop/simpful_btc/implementation/new_env/lib/python3.9/site-packages/urllib3/__init__.py:35: NotOpenSSLWarning: urllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'LibreSSL 2.8.3'. See: https://github.com/urllib3/urllib3/issues/3020\n",
            "  warnings.warn(\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "from pathlib import Path\n",
        "from simpful.gp_fuzzy_system.gp_evolution import genetic_algorithm_loop\n",
        "from simpful.gp_fuzzy_system.auto_lvs import FuzzyLinguisticVariableProcessor\n",
        "from sklearn.impute import SimpleImputer\n",
        "from sklearn.preprocessing import MinMaxScaler\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "0f405433-d8d6-46e5-9873-5bc4f341d8ae",
      "metadata": {},
      "source": [
        "## Load Data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "id": "ca52ffb1-7517-4116-a1cb-acf8e8c6edaa",
      "metadata": {},
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "NaN values in X_train after imputation:\n",
            " 0\n",
            "Extreme values in X_train: 2367\n"
          ]
        }
      ],
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "from sklearn.impute import SimpleImputer\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "# Paths to the prepped data files\n",
        "base_path = './daily_data/'\n",
        "scaled_path = os.path.join(base_path, 'scaled')\n",
        "\n",
        "# Create the scaled directory if it doesn't exist\n",
        "os.makedirs(scaled_path, exist_ok=True)\n",
        "\n",
        "X_train_path = base_path + 'X_train.csv'\n",
        "X_test_path = base_path + 'X_test.csv'\n",
        "y_train_path = base_path + 'y_train.csv'\n",
        "y_test_path = base_path + 'y_test.csv'\n",
        "\n",
        "# Loading the datasets\n",
        "X_train = pd.read_csv(X_train_path)\n",
        "X_test = pd.read_csv(X_test_path)\n",
        "y_train = pd.read_csv(y_train_path)\n",
        "y_test = pd.read_csv(y_test_path)\n",
        "\n",
        "# Rename the column in y_train to 'target'\n",
        "y_train.rename(columns={'close': 'target'}, inplace=True)\n",
        "\n",
        "# Rename the column in y_test to 'target'\n",
        "y_test.rename(columns={'close': 'target'}, inplace=True)\n",
        "\n",
        "# Impute missing values in 'value' and 'classification_numerical' columns\n",
        "imputer = SimpleImputer(strategy='mean')\n",
        "X_train[['value', 'classification_numerical']] = imputer.fit_transform(X_train[['value', 'classification_numerical']])\n",
        "\n",
        "# Verify that there are no NaN values left\n",
        "print(\"NaN values in X_train after imputation:\\n\", X_train.isna().sum().sum())\n",
        "\n",
        "# Check for extreme values in the data\n",
        "print(\"Extreme values in X_train:\", (X_train > 1e9).sum().sum())\n",
        "\n",
        "# Exclude non-numerical columns before scaling\n",
        "columns_to_scale = X_train.columns  # All columns in X_train are numerical\n",
        "\n",
        "# Initialize the scaler for the features\n",
        "scaler_X = MinMaxScaler()\n",
        "\n",
        "# Scale 'X' features\n",
        "x_train_scaled = scaler_X.fit_transform(X_train[columns_to_scale])\n",
        "x_test_scaled = scaler_X.transform(X_test[columns_to_scale])\n",
        "\n",
        "# Initialize a separate scaler for the target variable\n",
        "scaler_y = MinMaxScaler()\n",
        "\n",
        "# Scale 'y' (the target variable)\n",
        "y_train_scaled = scaler_y.fit_transform(y_train.values.reshape(-1, 1)).flatten()\n",
        "y_test_scaled = scaler_y.transform(y_test.values.reshape(-1, 1)).flatten()\n",
        "\n",
        "# Paths to save the scaled data\n",
        "scaled_X_train_path = os.path.join(scaled_path, 'X_train_scaled.csv')\n",
        "scaled_X_test_path = os.path.join(scaled_path, 'X_test_scaled.csv')\n",
        "scaled_y_train_path = os.path.join(scaled_path, 'y_train_scaled.csv')\n",
        "scaled_y_test_path = os.path.join(scaled_path, 'y_test_scaled.csv')\n",
        "\n",
        "# Save the preprocessed and scaled data to the 'scaled' directory\n",
        "pd.DataFrame(x_train_scaled, columns=columns_to_scale).to_csv(scaled_X_train_path, index=False)\n",
        "pd.DataFrame(x_test_scaled, columns=columns_to_scale).to_csv(scaled_X_test_path, index=False)\n",
        "pd.DataFrame(y_train_scaled, columns=['target']).to_csv(scaled_y_train_path, index=False)\n",
        "pd.DataFrame(y_test_scaled, columns=['target']).to_csv(scaled_y_test_path, index=False)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "9e3fa369-97c0-494a-b845-b16eb12a81b9",
      "metadata": {},
      "source": [
        "## Further Processing"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "id": "1f2d5f3c-f42e-4109-b257-972789e88173",
      "metadata": {},
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.018978836247480677, slope: 0.06209498408714252\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.12418996817428504, slope: 0.14018141551439692\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.29934166727627454, slope: 0.23163720197611026\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.5874643721265056, slope: 0.2665025660930903\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.8323467994624552, slope: 0.2062678139367472\n",
            "Created linguistic variable for column 'open' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.043140859157956374, slope: 0.052671290719422476\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.10534258143884495, slope: 0.07052566712443456\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.1841921934068255, slope: 0.11443877752300918\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.3342201364848633, slope: 0.24128289666644576\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.666757986739717, slope: 0.3328899317575683\n",
            "Created linguistic variable for column 'volume' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.021534243015747974, slope: 0.06624244989058511\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.13248489978117023, slope: 0.2353228538835232\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.49217995078279436, slope: 0.26677827305212654\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6660414458854234, slope: 0.18662717253901975\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.8654342958608339, slope: 0.16697927705728832\n",
            "Created linguistic variable for column 'sma_30' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.23190394990192464, slope: 0.19014788865302226\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.3802957773060445, slope: 0.13222415729859543\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.4963522644991155, slope: 0.11993794122187809\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6201716597498007, slope: 0.14170444386326592\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.7797611522256473, slope: 0.18991417012509965\n",
            "Created linguistic variable for column 'rsi' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.3193161128580404, slope: 0.23819084887499167\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.47638169774998335, slope: 0.11322185832659148\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.5457598295112234, slope: 0.06604455619429109\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6084708101385655, slope: 0.09589502078121798\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.7375498710736593, slope: 0.19576459493071724\n",
            "Created linguistic variable for column 'macd' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.08924918006668366, slope: 0.12383330431154624\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.24766660862309248, slope: 0.17394270922108274\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.4371345985088491, slope: 0.17947342850036366\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6066134656238198, slope: 0.22938387691886183\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.8959023523465728, slope: 0.19669326718809\n",
            "Created linguistic variable for column 'dia_close' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.002829183096305795, slope: 0.049059548124304374\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.09811909624860875, slope: 0.08395329257330084\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.17073576824290745, slope: 0.09311141732470488\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.2843419308980185, slope: 0.20529650323280463\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.5813287747085167, slope: 0.35782903455099074\n",
            "Created linguistic variable for column 'dia_volume' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.15005669431387228, slope: 0.1201448161660668\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.2402896323321336, slope: 0.1442689067715539\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.43859450785698006, slope: 0.22910913823442186\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6985079088009774, slope: 0.19630229378804565\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.8311990954330714, slope: 0.1507460455995112\n",
            "Created linguistic variable for column 'gld_close' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.001392270026556826, slope: 0.02825502616775339\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.05651005233550678, slope: 0.05086988099264518\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.10313203201184719, slope: 0.07566495256752051\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.20783995747054781, slope: 0.38116521866319125\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.8654624693382297, slope: 0.3960800212647261\n",
            "Created linguistic variable for column 'gld_volume' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.10710092033830967, slope: 0.14696482677047104\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.2939296535409421, slope: 0.17225786806304944\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.4516166564644085, slope: 0.1965254839565483\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6869806214540387, slope: 0.21851011626030264\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.8886368889850138, slope: 0.15650968927298065\n",
            "Created linguistic variable for column 'spy_close' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.005277430515933851, slope: 0.0723598779255564\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.1447197558511128, slope: 0.11292051698370315\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.23111846448334014, slope: 0.10849606737870551\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.3617118906085238, slope: 0.2167353201891769\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.664589104861694, slope: 0.3191440546957381\n",
            "Created linguistic variable for column 'spy_volume' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.01756157023487792, slope: 0.0758855739543326\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.1517711479086652, slope: 0.20697747260480862\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.43151651544449515, slope: 0.25908540406399067\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6699419560366465, slope: 0.255857339268864\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.9432311939822232, slope: 0.16502902198167674\n",
            "Created linguistic variable for column 'federal_funds_rate_daily' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.0773172180431511, slope: 0.16388024221264288\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.32776048442528577, slope: 0.18148345327974708\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.44028412460264527, slope: 0.1478427331202898\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6234459506658654, slope: 0.1827081018619963\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.8057003283266378, slope: 0.1882770246670673\n",
            "Created linguistic variable for column 'treasury_yield_daily' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.08127815545373519, slope: 0.11969123670653911\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.23938247341307822, slope: 0.1403162236503854\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.361910602754506, slope: 0.19752304063951528\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6344285546921088, slope: 0.2633316028121009\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.8885738083787078, slope: 0.1827857226539456\n",
            "Created linguistic variable for column 'cpi_monthly' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.07550885885772506, slope: 0.1807643062224662\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.3615286124449324, slope: 0.2086191220074281\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.4927471028725813, slope: 0.13463448753226104\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6307975875094545, slope: 0.15584303855356302\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.8044331799797073, slope: 0.18460120624527288\n",
            "Created linguistic variable for column 'durables_monthly' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.07045299794120383, slope: 0.23283219956525286\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.4656643991305057, slope: 0.27240562679507074\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.6152642515313453, slope: 0.14501687716338896\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.7556981534572836, slope: 0.14460885867028056\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.9044819688719065, slope: 0.12215092327135818\n",
            "Created linguistic variable for column 'nonfarm_payroll_monthly' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.19925150382934398, slope: 0.24408468792907576\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.4881693758581515, slope: 0.2282447487825523\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.6557410013944486, slope: 0.22088050009144375\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.929930376041039, slope: 0.1721294993027757\n",
            "Created linguistic variable for column 'real_gdp_per_capita_quarterly' with 4 terms\n",
            "Failed to create linguistic variable for column 'real_gdp_quarterly' with at least 2 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.07430872173182088, slope: 0.11335703169625116\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.22671406339250233, slope: 0.14636779901924934\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.3670443197703196, slope: 0.14944262440177197\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.5255993121960463, slope: 0.22207456264999492\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.8111934450703094, slope: 0.23720034390197686\n",
            "Created linguistic variable for column 'retail_sales_monthly' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.02652312473523938, slope: 0.055875404150298916\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.11175080830059783, slope: 0.11808013958857219\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.26268340391238376, slope: 0.2487682475450586\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.609287303390715, slope: 0.3342805686698111\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.931244541252006, slope: 0.1953563483046425\n",
            "Created linguistic variable for column 'unemployment_monthly' with 5 terms\n",
            "Failed to create linguistic variable for column 'central_bank_policy_rate_prcnt' with at least 2 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 6.848781457769947e-08, slope: 0.04438940108451838\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.08877880216903676, slope: 0.15306824976716774\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.30613656802215006, slope: 0.4526255465353105\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.9940298952396578, slope: 0.34693171598892497\n",
            "Created linguistic variable for column 'domestic_credit_gdp' with 4 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.2087379130999098, slope: 0.2814781706274301\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.5629563412548602, slope: 0.25863584959252583\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.7260096122849614, slope: 0.20943168971135323\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.9818197206775666, slope: 0.1369951938575193\n",
            "Created linguistic variable for column 'foreign_direct_investment_value' with 4 terms\n",
            "Failed to create linguistic variable for column 'gdp_growth_annual_prcnt' with at least 2 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.0040407395840553135, slope: 0.08351319385495631\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.16702638770991263, slope: 0.12737548261526607\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.25879170481458746, slope: 0.09098205283213942\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.34899049337419147, slope: 0.3706041474101028\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.999999999634793, slope: 0.3255047533129043\n",
            "Created linguistic variable for column 'inflation_rate_value' with 5 terms\n",
            "Failed to create linguistic variable for column 'individuals_using_the_internet_prcnt_of_population' with at least 2 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 3.188261837270415e-07, slope: 0.02869719287574671\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.05739438575149342, slope: 0.21027127079039726\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.42054286040697825, slope: 0.36324712227094774\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.783888630293389, slope: 0.289728528708629\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.9999999178242363, slope: 0.10805568485330552\n",
            "Created linguistic variable for column 'mobile_cellular_subscriptions_per_100_people' with 5 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 3.364139321389022e-06, slope: 0.2866212672401615\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.573242534480323, slope: 0.36013200042621274\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.7202673649917468, slope: 0.20906155817799882\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.9913656508363207, slope: 0.1398663175041266\n",
            "Created linguistic variable for column 'personal_remittances_received_prcnt_of_gdp' with 4 terms\n",
            "Failed to create linguistic variable for column 'stock_market_index_value' with at least 2 terms\n",
            "Failed to create linguistic variable for column 'tariffs_value' with at least 2 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 0.024194829332825664, slope: 0.05382551014052151\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.10765102028104302, slope: 0.38489430476963915\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.793983438872104, slope: 0.4461741991146076\n",
            "Defined sigmoid fuzzy set for term 'VERY_HIGH' with mean: 0.9999994185102582, slope: 0.10300828056394801\n",
            "Created linguistic variable for column 'total_public_debt_gdp_value' with 4 terms\n",
            "Failed to create linguistic variable for column 'trade_balance_value' with at least 2 terms\n",
            "Defined sigmoid fuzzy set for term 'VERY_LOW' with mean: 5.981214319377833e-08, slope: 0.05781111922781239\n",
            "Defined sigmoid fuzzy set for term 'LOW' with mean: 0.11562223845562478, slope: 0.43252554941693594\n",
            "Defined sigmoid fuzzy set for term 'MEDIUM' with mean: 0.8650511586460151, slope: 0.44217856839381126\n",
            "Defined sigmoid fuzzy set for term 'HIGH' with mean: 0.9999793752432473, slope: 0.06747442067699266\n",
            "Created linguistic variable for column 'trade_in_services_value' with 4 terms\n",
            "Failed to create linguistic variable for column 'unemployment_rate_value' with at least 2 terms\n",
            "Failed to create linguistic variable for column 'value' with at least 2 terms\n",
            "Failed to create linguistic variable for column 'classification_numerical' with at least 2 terms\n"
          ]
        }
      ],
      "source": [
        "# Initialize the FuzzyLinguisticVariableProcessor with the scaled X_train path\n",
        "exclude_columns = 'month,day,hour'\n",
        "terms_dict_path = './terms/terms_dict.py'\n",
        "verbose = True\n",
        "\n",
        "processor = FuzzyLinguisticVariableProcessor(\n",
        "    file_path=scaled_X_train_path,  # Use the scaled data path\n",
        "    terms_dict_path=terms_dict_path, \n",
        "    verbose=verbose, \n",
        "    exclude_columns=exclude_columns.split(','),\n",
        "    mf_type='sigmoid',\n",
        ")\n",
        "variable_store = processor.process_dataset()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "id": "82d16613-1ee9-453d-a852-25fcca2cdc72",
      "metadata": {},
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "Generations:  50%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                                                                   | 2/4 [00:03<00:03,  1.94s/gen]"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n",
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n",
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n",
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "Generations:  75%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                         | 3/4 [00:05<00:01,  1.96s/gen]"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n",
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n",
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n",
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "Generations: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:07<00:00,  1.97s/gen]"
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n",
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n",
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n",
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n",
            "Fitness Scores: [inf, inf, inf, inf, inf, inf, inf, inf, inf, inf]\n",
            "Finite Fitness Scores: [10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0, 10000000000.0]\n",
            "Inverse Fitness Scores: [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10]\n",
            "Fitness Sum: 9.999999999999999e-10\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "\n"
          ]
        }
      ],
      "source": [
        "# Define the parameters\n",
        "population_size = 10\n",
        "max_generations = 4\n",
        "mutation_rate = 0.5\n",
        "crossover_rate = 0.8\n",
        "selection_method = 'hybrid'\n",
        "tournament_size = 3\n",
        "elitism_rate = 0.15\n",
        "max_rules = 7\n",
        "min_rules = 3\n",
        "verbose = False\n",
        "\n",
        "# Run the genetic algorithm\n",
        "best_system, best_fitness_per_generation, average_fitness_per_generation = genetic_algorithm_loop(population_size,\n",
        "    max_generations, x_train_scaled, y_train_scaled, variable_store, selection_method,\n",
        "    tournament_size, crossover_rate, mutation_rate, elitism_rate, max_rules, min_rules, verbose)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "5063847f-bf9c-4f60-a37c-4ed4de7d8cd6",
      "metadata": {},
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python simpfuldev213",
      "language": "python",
      "name": "simpfuldev213"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.6"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
